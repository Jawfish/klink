{
    "info": {
        "_postman_id": "333c8eb6-0495-43af-9d5b-b4783e6bddfe",
        "name": "klink",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "28809938"
    },
    "item": [
        {
            "name": "Users can register if the username doesn't already exist",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {\r",
                            "    pm.response.to.have.status(201);\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"username\": \"username\",\r\n    \"unhashed_password\": \"unhashed_password\"\r\n}"
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/register",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "register"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Users can't register an existing username",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 409\", function () {\r",
                            "    pm.response.to.have.status(409);\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"username\": \"username\",\r\n    \"unhashed_password\": \"unhashed_password\"\r\n}"
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/register",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "register"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Token is received when logging in with valid credentials",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Body contains token\", function () {\r",
                            "    pm.response.to.have.jsonBody(\"token\");\r",
                            "});\r",
                            "\r",
                            "let jsonResponse = pm.response.json();\r",
                            "\r",
                            "pm.environment.set(\"jwt\", jsonResponse.token);\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "formdata",
                    "formdata": [
                        {
                            "key": "username",
                            "value": "username",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "unhashed_password",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/token",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Logging in with invalid credentials result in unauthorized response",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 401\", function () {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Body doesn't contain token\", function () {\r",
                            "    pm.response.to.not.have.jsonBody(\"token\");\r",
                            "});\r",
                            "\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "formdata",
                    "formdata": [
                        {
                            "key": "username",
                            "value": "invalid_username",
                            "type": "text"
                        },
                        {
                            "key": "password",
                            "value": "unhashed_password",
                            "type": "text"
                        }
                    ]
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/token",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "token"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "User's identity can be retrieved with valid JWT",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Body contains uuid\", function () {\r",
                            "    pm.response.to.have.jsonBody(\"uuid\");\r",
                            "});\r",
                            "\r",
                            "let jsonResponse = pm.response.json();\r",
                            "\r",
                            "pm.environment.set(\"uuid\", jsonResponse.uuid);"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{jwt}}",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "{{AUTH_SERVICE_URL}}/user-identity",
                    "host": [
                        "{{AUTH_SERVICE_URL}}"
                    ],
                    "path": [
                        "user-identity"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "User's identity can't be retrieved with invalid JWT",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 401\", function () {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Body doesn't contain uuid\", function () {\r",
                            "    pm.response.to.not.have.jsonBody(\"uuid\");\r",
                            "});\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_jwt",
                        "type": "text"
                    }
                ],
                "url": {
                    "raw": "{{AUTH_SERVICE_URL}}/user-identity",
                    "host": [
                        "{{AUTH_SERVICE_URL}}"
                    ],
                    "path": [
                        "user-identity"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Posts can be created via gateway service when logged in",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{jwt}}",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"title\": \"test title\",\r\n    \"url\": \"https://test.com\",\r\n    \"creator_uuid\": \"{{uuid}}\",\r\n    \"type\": \"link\"\r\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/posts",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Posts can't be created via gateway service with invalid JWT",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 401\", function () {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer invalid_token",
                        "type": "text"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"uuid\": \"test-uuid\",\r\n    \"title\": \"test title\",\r\n    \"url\": \"https://test.com\",\r\n    \"type\": \"link\"\r\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/posts",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Posts can't be created via gateway service when not logged in",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 401\", function () {\r",
                            "    pm.response.to.have.status(401);\r",
                            "});\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"uuid\": \"test-uuid\",\r\n    \"title\": \"test title\",\r\n    \"url\": \"https://test.com\",\r\n    \"type\": \"link\"\r\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/posts",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Posts can be retrieved from post service",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Response structure is correct\", function () {\r",
                            "    const data = pm.response.json();\r",
                            "\r",
                            "    pm.expect(Array.isArray(data)).to.be.true;\r",
                            "\r",
                            "    pm.expect(data[0]).to.have.keys('post_uuid', 'creator_uuid', 'voteCount', 'title', 'url', 'createdAt');\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{POST_SERVICE_URL}}/posts",
                    "host": [
                        "{{POST_SERVICE_URL}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Posts can be retrieved from gateway service",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "pm.test(\"Response structure is correct\", function () {\r",
                            "    const data = pm.response.json();\r",
                            "\r",
                            "    pm.expect(Array.isArray(data)).to.be.true;\r",
                            "\r",
                            "    pm.expect(data[0]).to.have.keys('post_uuid', 'author', 'vote_count', 'title', 'url', 'created_at');\r",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{GATEWAY_SERVICE_URL}}/posts",
                    "host": [
                        "{{GATEWAY_SERVICE_URL}}"
                    ],
                    "path": [
                        "posts"
                    ]
                }
            },
            "response": []
        }
    ]
}