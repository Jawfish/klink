version: '3.8'

services:
  gateway:
    build:
      context: ./app/gateway
      dockerfile: Dockerfile
    networks:
      - klink_net
    ports:
      - 8000:8000
    environment:
      - USER_HOST=${USER_HOST}
      - POST_HOST=${POST_HOST}
      - TAG_HOST=${TAG_HOST}

  user:
    build:
      context: ./app/user
      dockerfile: Dockerfile
    networks:
      - klink_net
    ports:
      - 8001:8000
    environment:
      - DATABASE_URL=${DATABASE_URL_USER}

  post:
    build:
      context: ./app/post
      dockerfile: Dockerfile
    networks:
      - klink_net
    ports:
      - 8002:8000
    environment:
      - DATABASE_URL=${DATABASE_URL_POST}

  tag:
    build:
      context: ./app/tag
      dockerfile: Dockerfile
    networks:
      - klink_net
    ports:
      - 8003:8000
    environment:
      - DATABASE_URL=${DATABASE_URL_TAG}

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    networks:
      - klink_net
    ports:
      - 80:8000

  user_db:
    image: postgres:latest
    networks:
      - klink_net
    volumes:
      - user_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  post_db:
    image: postgres:latest
    networks:
      - klink_net
    volumes:
      - post_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  tag_db:
    image: postgres:latest
    networks:
      - klink_net
    volumes:
      - tag_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

networks:
  klink_net:


volumes:
  user_data:
  post_data:
  tag_data:
